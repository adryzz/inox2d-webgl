name: Rust

on:
  push:
    branches: [ "master" ]
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false
  
jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Install wasm32-unknown-unknown target
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: nightly
        target: wasm32-unknown-unknown
      
    - name: Set up trunk
      uses: jetli/trunk-action@v0.4.0

    - name: Pull models because CORS
      run: "mkdir assets"

    - name: Pull models because CORS part 2
      run: "wget https://raw.githubusercontent.com/RavioliMavioli/archlive2d/main/Inochi2D/Arch%20Chan%20Model.inp -o assets/arch-chan.inp"
      
    - name: Build
      run: "trunk build --release --public-url inox2d-webgl"
    
    - name: Move dist directory
      run: "mv ./dist ./_site"
      
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v2

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
